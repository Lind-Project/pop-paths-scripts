<!DOCTYPE html>
<html lang='en'>
<head>
<title>kernel/git/torvalds/linux.git - Linux kernel source tree</title>
<meta name='generator' content='cgit '/>
<meta name='robots' content='noindex, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/atom/?h=master' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='kernel/git/torvalds/linux.git' href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>kernel/git/torvalds/linux.git</a></td><td class='form'><form method='get'>
<input type='hidden' name='id' value='f02cab2bed1a3493a230e54d83ff117bc59f480e'/><select name='h' onchange='this.form.submit();'>
<option value='master' selected='selected'>master</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>Linux kernel source tree</td><td class='sub right'>Linus Torvalds</td></tr></table>
<table class='tabs'><tr><td>
<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/about/'>about</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>summary</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/refs/?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>refs</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>log</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>tree</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>commit</a><a class='active' href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>diff</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/stats/'>stats</a></td><td class='form'><form class='right' method='get' action='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>
<input type='hidden' name='id' value='f02cab2bed1a3493a230e54d83ff117bc59f480e'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='content'><div class='cgit-panel'><b>diff options</b><form method='get'><input type='hidden' name='id' value='f02cab2bed1a3493a230e54d83ff117bc59f480e'/><table><tr><td colspan='2'/></tr><tr><td class='label'>context:</td><td class='ctrl'><select name='context' onchange='this.form.submit();'><option value='1'>1</option><option value='2'>2</option><option value='3' selected='selected'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='15'>15</option><option value='20'>20</option><option value='25'>25</option><option value='30'>30</option><option value='35'>35</option><option value='40'>40</option></select></td></tr><tr><td class='label'>space:</td><td class='ctrl'><select name='ignorews' onchange='this.form.submit();'><option value='0' selected='selected'>include</option><option value='1'>ignore</option></select></td></tr><tr><td class='label'>mode:</td><td class='ctrl'><select name='dt' onchange='this.form.submit();'><option value='0' selected='selected'>unified</option><option value='1'>ssdiff</option><option value='2'>stat only</option></select></td></tr><tr><td/><td class='ctrl'><noscript><input type='submit' value='reload'/></noscript></td></tr></table></form></div><div class='diffstat-header'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>Diffstat</a></div><table summary='diffstat' class='diffstat'><tr><td class='mode'>-rw-r--r--</td><td class='add'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/arm/include/asm/spectre.h?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/include/asm/spectre.h</a></td><td class='right'>28</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 19.9%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 80.1%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/arm/kernel/Makefile?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/kernel/Makefile</a></td><td class='right'>2</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 1.4%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 98.6%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='add'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/arm/kernel/spectre.c?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/kernel/spectre.c</a></td><td class='right'>54</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 38.3%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 61.7%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/arm/mm/Kconfig?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/mm/Kconfig</a></td><td class='right'>1</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 0.7%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 99.3%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/arm/mm/proc-v7-bugs.c?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/mm/proc-v7-bugs.c</a></td><td class='right'>141</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 72.3%;'/><td class='rem' style='width: 27.7%;'/><td class='none' style='width: 0.0%;'/></tr></table></td></tr>
</table><div class='diffstat-summary'>5 files changed, 187 insertions, 39 deletions</div><table summary='diff' class='diff'><tr><td><div class='head'>diff --git a/arch/arm/include/asm/spectre.h b/arch/arm/include/asm/spectre.h<br/>new file mode 100644<br/>index 0000000000000..8a9019e08dba4<br/>--- /dev/null<br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/include/asm/spectre.h?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/include/asm/spectre.h</a></div><div class='hunk'>@@ -0,0 +1,28 @@</div><div class='add'>+/* SPDX-License-Identifier: GPL-2.0-only */</div><div class='add'>+</div><div class='add'>+#ifndef __ASM_SPECTRE_H</div><div class='add'>+#define __ASM_SPECTRE_H</div><div class='add'>+</div><div class='add'>+enum {</div><div class='add'>+	SPECTRE_UNAFFECTED,</div><div class='add'>+	SPECTRE_MITIGATED,</div><div class='add'>+	SPECTRE_VULNERABLE,</div><div class='add'>+};</div><div class='add'>+</div><div class='add'>+enum {</div><div class='add'>+	__SPECTRE_V2_METHOD_BPIALL,</div><div class='add'>+	__SPECTRE_V2_METHOD_ICIALLU,</div><div class='add'>+	__SPECTRE_V2_METHOD_SMC,</div><div class='add'>+	__SPECTRE_V2_METHOD_HVC,</div><div class='add'>+};</div><div class='add'>+</div><div class='add'>+enum {</div><div class='add'>+	SPECTRE_V2_METHOD_BPIALL = BIT(__SPECTRE_V2_METHOD_BPIALL),</div><div class='add'>+	SPECTRE_V2_METHOD_ICIALLU = BIT(__SPECTRE_V2_METHOD_ICIALLU),</div><div class='add'>+	SPECTRE_V2_METHOD_SMC = BIT(__SPECTRE_V2_METHOD_SMC),</div><div class='add'>+	SPECTRE_V2_METHOD_HVC = BIT(__SPECTRE_V2_METHOD_HVC),</div><div class='add'>+};</div><div class='add'>+</div><div class='add'>+void spectre_v2_update_state(unsigned int state, unsigned int methods);</div><div class='add'>+</div><div class='add'>+#endif</div><div class='head'>diff --git a/arch/arm/kernel/Makefile b/arch/arm/kernel/Makefile<br/>index ae295a3bcfefd..6ef3b535b7bf7 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/kernel/Makefile?id=bf048d1921b6cdc50bfc5a1b21b6fdd2d22e1fe1'>arch/arm/kernel/Makefile</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/kernel/Makefile?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/kernel/Makefile</a></div><div class='hunk'>@@ -106,4 +106,6 @@ endif</div><div class='ctx'> </div><div class='ctx'> obj-$(CONFIG_HAVE_ARM_SMCCC)	+= smccc-call.o</div><div class='ctx'> </div><div class='add'>+obj-$(CONFIG_GENERIC_CPU_VULNERABILITIES) += spectre.o</div><div class='add'>+</div><div class='ctx'> extra-y := $(head-y) vmlinux.lds</div><div class='head'>diff --git a/arch/arm/kernel/spectre.c b/arch/arm/kernel/spectre.c<br/>new file mode 100644<br/>index 0000000000000..6f6dd1cfd0995<br/>--- /dev/null<br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/kernel/spectre.c?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/kernel/spectre.c</a></div><div class='hunk'>@@ -0,0 +1,54 @@</div><div class='add'>+// SPDX-License-Identifier: GPL-2.0-only</div><div class='add'>+#include &lt;linux/cpu.h&gt;</div><div class='add'>+#include &lt;linux/device.h&gt;</div><div class='add'>+</div><div class='add'>+#include &lt;asm/spectre.h&gt;</div><div class='add'>+</div><div class='add'>+ssize_t cpu_show_spectre_v1(struct device *dev, struct device_attribute *attr,</div><div class='add'>+			    char *buf)</div><div class='add'>+{</div><div class='add'>+	return sprintf(buf, "Mitigation: __user pointer sanitization\n");</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+static unsigned int spectre_v2_state;</div><div class='add'>+static unsigned int spectre_v2_methods;</div><div class='add'>+</div><div class='add'>+void spectre_v2_update_state(unsigned int state, unsigned int method)</div><div class='add'>+{</div><div class='add'>+	if (state &gt; spectre_v2_state)</div><div class='add'>+		spectre_v2_state = state;</div><div class='add'>+	spectre_v2_methods |= method;</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+ssize_t cpu_show_spectre_v2(struct device *dev, struct device_attribute *attr,</div><div class='add'>+			    char *buf)</div><div class='add'>+{</div><div class='add'>+	const char *method;</div><div class='add'>+</div><div class='add'>+	if (spectre_v2_state == SPECTRE_UNAFFECTED)</div><div class='add'>+		return sprintf(buf, "%s\n", "Not affected");</div><div class='add'>+</div><div class='add'>+	if (spectre_v2_state != SPECTRE_MITIGATED)</div><div class='add'>+		return sprintf(buf, "%s\n", "Vulnerable");</div><div class='add'>+</div><div class='add'>+	switch (spectre_v2_methods) {</div><div class='add'>+	case SPECTRE_V2_METHOD_BPIALL:</div><div class='add'>+		method = "Branch predictor hardening";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	case SPECTRE_V2_METHOD_ICIALLU:</div><div class='add'>+		method = "I-cache invalidation";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	case SPECTRE_V2_METHOD_SMC:</div><div class='add'>+	case SPECTRE_V2_METHOD_HVC:</div><div class='add'>+		method = "Firmware call";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	default:</div><div class='add'>+		method = "Multiple mitigations";</div><div class='add'>+		break;</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	return sprintf(buf, "Mitigation: %s\n", method);</div><div class='add'>+}</div><div class='head'>diff --git a/arch/arm/mm/Kconfig b/arch/arm/mm/Kconfig<br/>index 82aa990c4180c..f597f55b58159 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/mm/Kconfig?id=bf048d1921b6cdc50bfc5a1b21b6fdd2d22e1fe1'>arch/arm/mm/Kconfig</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/mm/Kconfig?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/mm/Kconfig</a></div><div class='hunk'>@@ -830,6 +830,7 @@ config CPU_BPREDICT_DISABLE</div><div class='ctx'> </div><div class='ctx'> config CPU_SPECTRE</div><div class='ctx'> 	bool</div><div class='add'>+	select GENERIC_CPU_VULNERABILITIES</div><div class='ctx'> </div><div class='ctx'> config HARDEN_BRANCH_PREDICTOR</div><div class='ctx'> 	bool "Harden the branch predictor against aliasing attacks" if EXPERT</div><div class='head'>diff --git a/arch/arm/mm/proc-v7-bugs.c b/arch/arm/mm/proc-v7-bugs.c<br/>index 114c05ab4dd91..e438e59bb63e6 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/mm/proc-v7-bugs.c?id=bf048d1921b6cdc50bfc5a1b21b6fdd2d22e1fe1'>arch/arm/mm/proc-v7-bugs.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/arm/mm/proc-v7-bugs.c?id=f02cab2bed1a3493a230e54d83ff117bc59f480e'>arch/arm/mm/proc-v7-bugs.c</a></div><div class='hunk'>@@ -6,8 +6,35 @@</div><div class='ctx'> #include &lt;asm/cp15.h&gt;</div><div class='ctx'> #include &lt;asm/cputype.h&gt;</div><div class='ctx'> #include &lt;asm/proc-fns.h&gt;</div><div class='add'>+#include &lt;asm/spectre.h&gt;</div><div class='ctx'> #include &lt;asm/system_misc.h&gt;</div><div class='ctx'> </div><div class='add'>+#ifdef CONFIG_ARM_PSCI</div><div class='add'>+static int __maybe_unused spectre_v2_get_cpu_fw_mitigation_state(void)</div><div class='add'>+{</div><div class='add'>+	struct arm_smccc_res res;</div><div class='add'>+</div><div class='add'>+	arm_smccc_1_1_invoke(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,</div><div class='add'>+			     ARM_SMCCC_ARCH_WORKAROUND_1, &amp;res);</div><div class='add'>+</div><div class='add'>+	switch ((int)res.a0) {</div><div class='add'>+	case SMCCC_RET_SUCCESS:</div><div class='add'>+		return SPECTRE_MITIGATED;</div><div class='add'>+</div><div class='add'>+	case SMCCC_ARCH_WORKAROUND_RET_UNAFFECTED:</div><div class='add'>+		return SPECTRE_UNAFFECTED;</div><div class='add'>+</div><div class='add'>+	default:</div><div class='add'>+		return SPECTRE_VULNERABLE;</div><div class='add'>+	}</div><div class='add'>+}</div><div class='add'>+#else</div><div class='add'>+static int __maybe_unused spectre_v2_get_cpu_fw_mitigation_state(void)</div><div class='add'>+{</div><div class='add'>+	return SPECTRE_VULNERABLE;</div><div class='add'>+}</div><div class='add'>+#endif</div><div class='add'>+</div><div class='ctx'> #ifdef CONFIG_HARDEN_BRANCH_PREDICTOR</div><div class='ctx'> DEFINE_PER_CPU(harden_branch_predictor_fn_t, harden_branch_predictor_fn);</div><div class='ctx'> </div><div class='hunk'>@@ -36,13 +63,60 @@ static void __maybe_unused call_hvc_arch_workaround_1(void)</div><div class='ctx'> 	arm_smccc_1_1_hvc(ARM_SMCCC_ARCH_WORKAROUND_1, NULL);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='del'>-static void cpu_v7_spectre_init(void)</div><div class='add'>+static unsigned int spectre_v2_install_workaround(unsigned int method)</div><div class='ctx'> {</div><div class='ctx'> 	const char *spectre_v2_method = NULL;</div><div class='ctx'> 	int cpu = smp_processor_id();</div><div class='ctx'> </div><div class='ctx'> 	if (per_cpu(harden_branch_predictor_fn, cpu))</div><div class='del'>-		return;</div><div class='add'>+		return SPECTRE_MITIGATED;</div><div class='add'>+</div><div class='add'>+	switch (method) {</div><div class='add'>+	case SPECTRE_V2_METHOD_BPIALL:</div><div class='add'>+		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='add'>+			harden_branch_predictor_bpiall;</div><div class='add'>+		spectre_v2_method = "BPIALL";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	case SPECTRE_V2_METHOD_ICIALLU:</div><div class='add'>+		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='add'>+			harden_branch_predictor_iciallu;</div><div class='add'>+		spectre_v2_method = "ICIALLU";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	case SPECTRE_V2_METHOD_HVC:</div><div class='add'>+		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='add'>+			call_hvc_arch_workaround_1;</div><div class='add'>+		cpu_do_switch_mm = cpu_v7_hvc_switch_mm;</div><div class='add'>+		spectre_v2_method = "hypervisor";</div><div class='add'>+		break;</div><div class='add'>+</div><div class='add'>+	case SPECTRE_V2_METHOD_SMC:</div><div class='add'>+		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='add'>+			call_smc_arch_workaround_1;</div><div class='add'>+		cpu_do_switch_mm = cpu_v7_smc_switch_mm;</div><div class='add'>+		spectre_v2_method = "firmware";</div><div class='add'>+		break;</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	if (spectre_v2_method)</div><div class='add'>+		pr_info("CPU%u: Spectre v2: using %s workaround\n",</div><div class='add'>+			smp_processor_id(), spectre_v2_method);</div><div class='add'>+</div><div class='add'>+	return SPECTRE_MITIGATED;</div><div class='add'>+}</div><div class='add'>+#else</div><div class='add'>+static unsigned int spectre_v2_install_workaround(unsigned int method)</div><div class='add'>+{</div><div class='add'>+	pr_info("CPU%u: Spectre V2: workarounds disabled by configuration\n");</div><div class='add'>+</div><div class='add'>+	return SPECTRE_VULNERABLE;</div><div class='add'>+}</div><div class='add'>+#endif</div><div class='add'>+</div><div class='add'>+static void cpu_v7_spectre_v2_init(void)</div><div class='add'>+{</div><div class='add'>+	unsigned int state, method = 0;</div><div class='ctx'> </div><div class='ctx'> 	switch (read_cpuid_part()) {</div><div class='ctx'> 	case ARM_CPU_PART_CORTEX_A8:</div><div class='hunk'>@@ -51,68 +125,57 @@ static void cpu_v7_spectre_init(void)</div><div class='ctx'> 	case ARM_CPU_PART_CORTEX_A17:</div><div class='ctx'> 	case ARM_CPU_PART_CORTEX_A73:</div><div class='ctx'> 	case ARM_CPU_PART_CORTEX_A75:</div><div class='del'>-		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='del'>-			harden_branch_predictor_bpiall;</div><div class='del'>-		spectre_v2_method = "BPIALL";</div><div class='add'>+		state = SPECTRE_MITIGATED;</div><div class='add'>+		method = SPECTRE_V2_METHOD_BPIALL;</div><div class='ctx'> 		break;</div><div class='ctx'> </div><div class='ctx'> 	case ARM_CPU_PART_CORTEX_A15:</div><div class='ctx'> 	case ARM_CPU_PART_BRAHMA_B15:</div><div class='del'>-		per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='del'>-			harden_branch_predictor_iciallu;</div><div class='del'>-		spectre_v2_method = "ICIALLU";</div><div class='add'>+		state = SPECTRE_MITIGATED;</div><div class='add'>+		method = SPECTRE_V2_METHOD_ICIALLU;</div><div class='ctx'> 		break;</div><div class='ctx'> </div><div class='del'>-#ifdef CONFIG_ARM_PSCI</div><div class='ctx'> 	case ARM_CPU_PART_BRAHMA_B53:</div><div class='ctx'> 		/* Requires no workaround */</div><div class='add'>+		state = SPECTRE_UNAFFECTED;</div><div class='ctx'> 		break;</div><div class='add'>+</div><div class='ctx'> 	default:</div><div class='ctx'> 		/* Other ARM CPUs require no workaround */</div><div class='del'>-		if (read_cpuid_implementor() == ARM_CPU_IMP_ARM)</div><div class='add'>+		if (read_cpuid_implementor() == ARM_CPU_IMP_ARM) {</div><div class='add'>+			state = SPECTRE_UNAFFECTED;</div><div class='ctx'> 			break;</div><div class='add'>+		}</div><div class='add'>+</div><div class='ctx'> 		fallthrough;</div><div class='del'>-		/* Cortex A57/A72 require firmware workaround */</div><div class='del'>-	case ARM_CPU_PART_CORTEX_A57:</div><div class='del'>-	case ARM_CPU_PART_CORTEX_A72: {</div><div class='del'>-		struct arm_smccc_res res;</div><div class='ctx'> </div><div class='del'>-		arm_smccc_1_1_invoke(ARM_SMCCC_ARCH_FEATURES_FUNC_ID,</div><div class='del'>-				     ARM_SMCCC_ARCH_WORKAROUND_1, &amp;res);</div><div class='del'>-		if ((int)res.a0 != 0)</div><div class='del'>-			return;</div><div class='add'>+	/* Cortex A57/A72 require firmware workaround */</div><div class='add'>+	case ARM_CPU_PART_CORTEX_A57:</div><div class='add'>+	case ARM_CPU_PART_CORTEX_A72:</div><div class='add'>+		state = spectre_v2_get_cpu_fw_mitigation_state();</div><div class='add'>+		if (state != SPECTRE_MITIGATED)</div><div class='add'>+			break;</div><div class='ctx'> </div><div class='ctx'> 		switch (arm_smccc_1_1_get_conduit()) {</div><div class='ctx'> 		case SMCCC_CONDUIT_HVC:</div><div class='del'>-			per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='del'>-				call_hvc_arch_workaround_1;</div><div class='del'>-			cpu_do_switch_mm = cpu_v7_hvc_switch_mm;</div><div class='del'>-			spectre_v2_method = "hypervisor";</div><div class='add'>+			method = SPECTRE_V2_METHOD_HVC;</div><div class='ctx'> 			break;</div><div class='ctx'> </div><div class='ctx'> 		case SMCCC_CONDUIT_SMC:</div><div class='del'>-			per_cpu(harden_branch_predictor_fn, cpu) =</div><div class='del'>-				call_smc_arch_workaround_1;</div><div class='del'>-			cpu_do_switch_mm = cpu_v7_smc_switch_mm;</div><div class='del'>-			spectre_v2_method = "firmware";</div><div class='add'>+			method = SPECTRE_V2_METHOD_SMC;</div><div class='ctx'> 			break;</div><div class='ctx'> </div><div class='ctx'> 		default:</div><div class='add'>+			state = SPECTRE_VULNERABLE;</div><div class='ctx'> 			break;</div><div class='ctx'> 		}</div><div class='ctx'> 	}</div><div class='del'>-#endif</div><div class='del'>-	}</div><div class='ctx'> </div><div class='del'>-	if (spectre_v2_method)</div><div class='del'>-		pr_info("CPU%u: Spectre v2: using %s workaround\n",</div><div class='del'>-			smp_processor_id(), spectre_v2_method);</div><div class='del'>-}</div><div class='del'>-#else</div><div class='del'>-static void cpu_v7_spectre_init(void)</div><div class='del'>-{</div><div class='add'>+	if (state == SPECTRE_MITIGATED)</div><div class='add'>+		state = spectre_v2_install_workaround(method);</div><div class='add'>+</div><div class='add'>+	spectre_v2_update_state(state, method);</div><div class='ctx'> }</div><div class='del'>-#endif</div><div class='ctx'> </div><div class='ctx'> static __maybe_unused bool cpu_v7_check_auxcr_set(bool *warned,</div><div class='ctx'> 						  u32 mask, const char *msg)</div><div class='hunk'>@@ -142,16 +205,16 @@ static bool check_spectre_auxcr(bool *warned, u32 bit)</div><div class='ctx'> void cpu_v7_ca8_ibe(void)</div><div class='ctx'> {</div><div class='ctx'> 	if (check_spectre_auxcr(this_cpu_ptr(&amp;spectre_warned), BIT(6)))</div><div class='del'>-		cpu_v7_spectre_init();</div><div class='add'>+		cpu_v7_spectre_v2_init();</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> void cpu_v7_ca15_ibe(void)</div><div class='ctx'> {</div><div class='ctx'> 	if (check_spectre_auxcr(this_cpu_ptr(&amp;spectre_warned), BIT(0)))</div><div class='del'>-		cpu_v7_spectre_init();</div><div class='add'>+		cpu_v7_spectre_v2_init();</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> void cpu_v7_bugs_init(void)</div><div class='ctx'> {</div><div class='del'>-	cpu_v7_spectre_init();</div><div class='add'>+	cpu_v7_spectre_v2_init();</div><div class='ctx'> }</div></td></tr></table></div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit </a> (<a href='https://git-scm.com/'>git 2.34.1</a>) at 2023-02-02 23:00:34 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
