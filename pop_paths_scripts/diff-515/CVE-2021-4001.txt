<!DOCTYPE html>
<html lang='en'>
<head>
<title>kernel/git/torvalds/linux.git - Linux kernel source tree</title>
<meta name='generator' content='cgit '/>
<meta name='robots' content='noindex, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/atom/?h=master' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='kernel/git/torvalds/linux.git' href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>kernel/git/torvalds/linux.git</a></td><td class='form'><form method='get'>
<input type='hidden' name='id' value='a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'/><select name='h' onchange='this.form.submit();'>
<option value='master' selected='selected'>master</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>Linux kernel source tree</td><td class='sub right'>Linus Torvalds</td></tr></table>
<table class='tabs'><tr><td>
<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/about/'>about</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>summary</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/refs/?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>refs</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>log</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>tree</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>commit</a><a class='active' href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>diff</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/stats/'>stats</a></td><td class='form'><form class='right' method='get' action='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>
<input type='hidden' name='id' value='a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='content'><div class='cgit-panel'><b>diff options</b><form method='get'><input type='hidden' name='id' value='a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'/><table><tr><td colspan='2'/></tr><tr><td class='label'>context:</td><td class='ctrl'><select name='context' onchange='this.form.submit();'><option value='1'>1</option><option value='2'>2</option><option value='3' selected='selected'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='15'>15</option><option value='20'>20</option><option value='25'>25</option><option value='30'>30</option><option value='35'>35</option><option value='40'>40</option></select></td></tr><tr><td class='label'>space:</td><td class='ctrl'><select name='ignorews' onchange='this.form.submit();'><option value='0' selected='selected'>include</option><option value='1'>ignore</option></select></td></tr><tr><td class='label'>mode:</td><td class='ctrl'><select name='dt' onchange='this.form.submit();'><option value='0' selected='selected'>unified</option><option value='1'>ssdiff</option><option value='2'>stat only</option></select></td></tr><tr><td/><td class='ctrl'><noscript><input type='submit' value='reload'/></noscript></td></tr></table></form></div><div class='diffstat-header'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>Diffstat</a></div><table summary='diffstat' class='diffstat'><tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/include/linux/bpf.h?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>include/linux/bpf.h</a></td><td class='right'>3</td><td class='graph'><table summary='file diffstat' width='57%'><tr><td class='add' style='width: 3.5%;'/><td class='rem' style='width: 1.8%;'/><td class='none' style='width: 94.7%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/kernel/bpf/syscall.c?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>kernel/bpf/syscall.c</a></td><td class='right'>57</td><td class='graph'><table summary='file diffstat' width='57%'><tr><td class='add' style='width: 63.2%;'/><td class='rem' style='width: 36.8%;'/><td class='none' style='width: 0.0%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/kernel/bpf/verifier.c?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>kernel/bpf/verifier.c</a></td><td class='right'>17</td><td class='graph'><table summary='file diffstat' width='57%'><tr><td class='add' style='width: 28.1%;'/><td class='rem' style='width: 1.8%;'/><td class='none' style='width: 70.2%;'/></tr></table></td></tr>
</table><div class='diffstat-summary'>3 files changed, 54 insertions, 23 deletions</div><table summary='diff' class='diff'><tr><td><div class='head'>diff --git a/include/linux/bpf.h b/include/linux/bpf.h<br/>index 3db6f6c95489e..bca11ac818c1f 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/bpf.h?id=4d1834f39252e477f288e10561abcbba5ce1c9c2'>include/linux/bpf.h</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/bpf.h?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>include/linux/bpf.h</a></div><div class='hunk'>@@ -190,7 +190,7 @@ struct bpf_map {</div><div class='ctx'> 	atomic64_t usercnt;</div><div class='ctx'> 	struct work_struct work;</div><div class='ctx'> 	struct mutex freeze_mutex;</div><div class='del'>-	u64 writecnt; /* writable mmap cnt; protected by freeze_mutex */</div><div class='add'>+	atomic64_t writecnt;</div><div class='ctx'> };</div><div class='ctx'> </div><div class='ctx'> static inline bool map_value_has_spin_lock(const struct bpf_map *map)</div><div class='hunk'>@@ -1387,6 +1387,7 @@ void bpf_map_put(struct bpf_map *map);</div><div class='ctx'> void *bpf_map_area_alloc(u64 size, int numa_node);</div><div class='ctx'> void *bpf_map_area_mmapable_alloc(u64 size, int numa_node);</div><div class='ctx'> void bpf_map_area_free(void *base);</div><div class='add'>+bool bpf_map_write_active(const struct bpf_map *map);</div><div class='ctx'> void bpf_map_init_from_attr(struct bpf_map *map, union bpf_attr *attr);</div><div class='ctx'> int  generic_map_lookup_batch(struct bpf_map *map,</div><div class='ctx'> 			      const union bpf_attr *attr,</div><div class='head'>diff --git a/kernel/bpf/syscall.c b/kernel/bpf/syscall.c<br/>index 1cad6979a0d0f..ecd51a8a8680c 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/syscall.c?id=4d1834f39252e477f288e10561abcbba5ce1c9c2'>kernel/bpf/syscall.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/syscall.c?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>kernel/bpf/syscall.c</a></div><div class='hunk'>@@ -132,6 +132,21 @@ static struct bpf_map *find_and_alloc_map(union bpf_attr *attr)</div><div class='ctx'> 	return map;</div><div class='ctx'> }</div><div class='ctx'> </div><div class='add'>+static void bpf_map_write_active_inc(struct bpf_map *map)</div><div class='add'>+{</div><div class='add'>+	atomic64_inc(&amp;map-&gt;writecnt);</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+static void bpf_map_write_active_dec(struct bpf_map *map)</div><div class='add'>+{</div><div class='add'>+	atomic64_dec(&amp;map-&gt;writecnt);</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+bool bpf_map_write_active(const struct bpf_map *map)</div><div class='add'>+{</div><div class='add'>+	return atomic64_read(&amp;map-&gt;writecnt) != 0;</div><div class='add'>+}</div><div class='add'>+</div><div class='ctx'> static u32 bpf_map_value_size(const struct bpf_map *map)</div><div class='ctx'> {</div><div class='ctx'> 	if (map-&gt;map_type == BPF_MAP_TYPE_PERCPU_HASH ||</div><div class='hunk'>@@ -596,11 +611,8 @@ static void bpf_map_mmap_open(struct vm_area_struct *vma)</div><div class='ctx'> {</div><div class='ctx'> 	struct bpf_map *map = vma-&gt;vm_file-&gt;private_data;</div><div class='ctx'> </div><div class='del'>-	if (vma-&gt;vm_flags &amp; VM_MAYWRITE) {</div><div class='del'>-		mutex_lock(&amp;map-&gt;freeze_mutex);</div><div class='del'>-		map-&gt;writecnt++;</div><div class='del'>-		mutex_unlock(&amp;map-&gt;freeze_mutex);</div><div class='del'>-	}</div><div class='add'>+	if (vma-&gt;vm_flags &amp; VM_MAYWRITE)</div><div class='add'>+		bpf_map_write_active_inc(map);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> /* called for all unmapped memory region (including initial) */</div><div class='hunk'>@@ -608,11 +620,8 @@ static void bpf_map_mmap_close(struct vm_area_struct *vma)</div><div class='ctx'> {</div><div class='ctx'> 	struct bpf_map *map = vma-&gt;vm_file-&gt;private_data;</div><div class='ctx'> </div><div class='del'>-	if (vma-&gt;vm_flags &amp; VM_MAYWRITE) {</div><div class='del'>-		mutex_lock(&amp;map-&gt;freeze_mutex);</div><div class='del'>-		map-&gt;writecnt--;</div><div class='del'>-		mutex_unlock(&amp;map-&gt;freeze_mutex);</div><div class='del'>-	}</div><div class='add'>+	if (vma-&gt;vm_flags &amp; VM_MAYWRITE)</div><div class='add'>+		bpf_map_write_active_dec(map);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> static const struct vm_operations_struct bpf_map_default_vmops = {</div><div class='hunk'>@@ -663,7 +672,7 @@ static int bpf_map_mmap(struct file *filp, struct vm_area_struct *vma)</div><div class='ctx'> 		goto out;</div><div class='ctx'> </div><div class='ctx'> 	if (vma-&gt;vm_flags &amp; VM_MAYWRITE)</div><div class='del'>-		map-&gt;writecnt++;</div><div class='add'>+		bpf_map_write_active_inc(map);</div><div class='ctx'> out:</div><div class='ctx'> 	mutex_unlock(&amp;map-&gt;freeze_mutex);</div><div class='ctx'> 	return err;</div><div class='hunk'>@@ -1122,6 +1131,7 @@ static int map_update_elem(union bpf_attr *attr, bpfptr_t uattr)</div><div class='ctx'> 	map = __bpf_map_get(f);</div><div class='ctx'> 	if (IS_ERR(map))</div><div class='ctx'> 		return PTR_ERR(map);</div><div class='add'>+	bpf_map_write_active_inc(map);</div><div class='ctx'> 	if (!(map_get_sys_perms(map, f) &amp; FMODE_CAN_WRITE)) {</div><div class='ctx'> 		err = -EPERM;</div><div class='ctx'> 		goto err_put;</div><div class='hunk'>@@ -1157,6 +1167,7 @@ free_value:</div><div class='ctx'> free_key:</div><div class='ctx'> 	kvfree(key);</div><div class='ctx'> err_put:</div><div class='add'>+	bpf_map_write_active_dec(map);</div><div class='ctx'> 	fdput(f);</div><div class='ctx'> 	return err;</div><div class='ctx'> }</div><div class='hunk'>@@ -1179,6 +1190,7 @@ static int map_delete_elem(union bpf_attr *attr)</div><div class='ctx'> 	map = __bpf_map_get(f);</div><div class='ctx'> 	if (IS_ERR(map))</div><div class='ctx'> 		return PTR_ERR(map);</div><div class='add'>+	bpf_map_write_active_inc(map);</div><div class='ctx'> 	if (!(map_get_sys_perms(map, f) &amp; FMODE_CAN_WRITE)) {</div><div class='ctx'> 		err = -EPERM;</div><div class='ctx'> 		goto err_put;</div><div class='hunk'>@@ -1209,6 +1221,7 @@ static int map_delete_elem(union bpf_attr *attr)</div><div class='ctx'> out:</div><div class='ctx'> 	kvfree(key);</div><div class='ctx'> err_put:</div><div class='add'>+	bpf_map_write_active_dec(map);</div><div class='ctx'> 	fdput(f);</div><div class='ctx'> 	return err;</div><div class='ctx'> }</div><div class='hunk'>@@ -1516,6 +1529,7 @@ static int map_lookup_and_delete_elem(union bpf_attr *attr)</div><div class='ctx'> 	map = __bpf_map_get(f);</div><div class='ctx'> 	if (IS_ERR(map))</div><div class='ctx'> 		return PTR_ERR(map);</div><div class='add'>+	bpf_map_write_active_inc(map);</div><div class='ctx'> 	if (!(map_get_sys_perms(map, f) &amp; FMODE_CAN_READ) ||</div><div class='ctx'> 	    !(map_get_sys_perms(map, f) &amp; FMODE_CAN_WRITE)) {</div><div class='ctx'> 		err = -EPERM;</div><div class='hunk'>@@ -1580,6 +1594,7 @@ free_value:</div><div class='ctx'> free_key:</div><div class='ctx'> 	kvfree(key);</div><div class='ctx'> err_put:</div><div class='add'>+	bpf_map_write_active_dec(map);</div><div class='ctx'> 	fdput(f);</div><div class='ctx'> 	return err;</div><div class='ctx'> }</div><div class='hunk'>@@ -1607,8 +1622,7 @@ static int map_freeze(const union bpf_attr *attr)</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='ctx'> 	mutex_lock(&amp;map-&gt;freeze_mutex);</div><div class='del'>-</div><div class='del'>-	if (map-&gt;writecnt) {</div><div class='add'>+	if (bpf_map_write_active(map)) {</div><div class='ctx'> 		err = -EBUSY;</div><div class='ctx'> 		goto err_put;</div><div class='ctx'> 	}</div><div class='hunk'>@@ -4143,6 +4157,9 @@ static int bpf_map_do_batch(const union bpf_attr *attr,</div><div class='ctx'> 			    union bpf_attr __user *uattr,</div><div class='ctx'> 			    int cmd)</div><div class='ctx'> {</div><div class='add'>+	bool has_read  = cmd == BPF_MAP_LOOKUP_BATCH ||</div><div class='add'>+			 cmd == BPF_MAP_LOOKUP_AND_DELETE_BATCH;</div><div class='add'>+	bool has_write = cmd != BPF_MAP_LOOKUP_BATCH;</div><div class='ctx'> 	struct bpf_map *map;</div><div class='ctx'> 	int err, ufd;</div><div class='ctx'> 	struct fd f;</div><div class='hunk'>@@ -4155,16 +4172,13 @@ static int bpf_map_do_batch(const union bpf_attr *attr,</div><div class='ctx'> 	map = __bpf_map_get(f);</div><div class='ctx'> 	if (IS_ERR(map))</div><div class='ctx'> 		return PTR_ERR(map);</div><div class='del'>-</div><div class='del'>-	if ((cmd == BPF_MAP_LOOKUP_BATCH ||</div><div class='del'>-	     cmd == BPF_MAP_LOOKUP_AND_DELETE_BATCH) &amp;&amp;</div><div class='del'>-	    !(map_get_sys_perms(map, f) &amp; FMODE_CAN_READ)) {</div><div class='add'>+	if (has_write)</div><div class='add'>+		bpf_map_write_active_inc(map);</div><div class='add'>+	if (has_read &amp;&amp; !(map_get_sys_perms(map, f) &amp; FMODE_CAN_READ)) {</div><div class='ctx'> 		err = -EPERM;</div><div class='ctx'> 		goto err_put;</div><div class='ctx'> 	}</div><div class='del'>-</div><div class='del'>-	if (cmd != BPF_MAP_LOOKUP_BATCH &amp;&amp;</div><div class='del'>-	    !(map_get_sys_perms(map, f) &amp; FMODE_CAN_WRITE)) {</div><div class='add'>+	if (has_write &amp;&amp; !(map_get_sys_perms(map, f) &amp; FMODE_CAN_WRITE)) {</div><div class='ctx'> 		err = -EPERM;</div><div class='ctx'> 		goto err_put;</div><div class='ctx'> 	}</div><div class='hunk'>@@ -4177,8 +4191,9 @@ static int bpf_map_do_batch(const union bpf_attr *attr,</div><div class='ctx'> 		BPF_DO_BATCH(map-&gt;ops-&gt;map_update_batch);</div><div class='ctx'> 	else</div><div class='ctx'> 		BPF_DO_BATCH(map-&gt;ops-&gt;map_delete_batch);</div><div class='del'>-</div><div class='ctx'> err_put:</div><div class='add'>+	if (has_write)</div><div class='add'>+		bpf_map_write_active_dec(map);</div><div class='ctx'> 	fdput(f);</div><div class='ctx'> 	return err;</div><div class='ctx'> }</div><div class='head'>diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c<br/>index cba37d83451eb..2105b57c9c23a 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/verifier.c?id=4d1834f39252e477f288e10561abcbba5ce1c9c2'>kernel/bpf/verifier.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/bpf/verifier.c?id=a5d1d3522232b4af1f5dee02d381e6fa86be8e2d'>kernel/bpf/verifier.c</a></div><div class='hunk'>@@ -3885,7 +3885,22 @@ static void coerce_reg_to_size(struct bpf_reg_state *reg, int size)</div><div class='ctx'> </div><div class='ctx'> static bool bpf_map_is_rdonly(const struct bpf_map *map)</div><div class='ctx'> {</div><div class='del'>-	return (map-&gt;map_flags &amp; BPF_F_RDONLY_PROG) &amp;&amp; map-&gt;frozen;</div><div class='add'>+	/* A map is considered read-only if the following condition are true:</div><div class='add'>+	 *</div><div class='add'>+	 * 1) BPF program side cannot change any of the map content. The</div><div class='add'>+	 *    BPF_F_RDONLY_PROG flag is throughout the lifetime of a map</div><div class='add'>+	 *    and was set at map creation time.</div><div class='add'>+	 * 2) The map value(s) have been initialized from user space by a</div><div class='add'>+	 *    loader and then "frozen", such that no new map update/delete</div><div class='add'>+	 *    operations from syscall side are possible for the rest of</div><div class='add'>+	 *    the map's lifetime from that point onwards.</div><div class='add'>+	 * 3) Any parallel/pending map update/delete operations from syscall</div><div class='add'>+	 *    side have been completed. Only after that point, it's safe to</div><div class='add'>+	 *    assume that map value(s) are immutable.</div><div class='add'>+	 */</div><div class='add'>+	return (map-&gt;map_flags &amp; BPF_F_RDONLY_PROG) &amp;&amp;</div><div class='add'>+	       READ_ONCE(map-&gt;frozen) &amp;&amp;</div><div class='add'>+	       !bpf_map_write_active(map);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> static int bpf_map_direct_read(struct bpf_map *map, int off, int size, u64 *val)</div></td></tr></table></div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit </a> (<a href='https://git-scm.com/'>git 2.34.1</a>) at 2023-02-02 23:00:14 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
