<!DOCTYPE html>
<html lang='en'>
<head>
<title>kernel/git/torvalds/linux.git - Linux kernel source tree</title>
<meta name='generator' content='cgit '/>
<meta name='robots' content='noindex, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/atom/?h=master' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='kernel/git/torvalds/linux.git' href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>kernel/git/torvalds/linux.git</a></td><td class='form'><form method='get'>
<input type='hidden' name='id' value='d74f4eb1ddf076a55ff0682a89e66af5c1974321'/><select name='h' onchange='this.form.submit();'>
<option value='master' selected='selected'>master</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>Linux kernel source tree</td><td class='sub right'>Linus Torvalds</td></tr></table>
<table class='tabs'><tr><td>
<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/about/'>about</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>summary</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/refs/?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>refs</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>log</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>tree</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>commit</a><a class='active' href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>diff</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/stats/'>stats</a></td><td class='form'><form class='right' method='get' action='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>
<input type='hidden' name='id' value='d74f4eb1ddf076a55ff0682a89e66af5c1974321'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='content'><div class='cgit-panel'><b>diff options</b><form method='get'><input type='hidden' name='id' value='d74f4eb1ddf076a55ff0682a89e66af5c1974321'/><table><tr><td colspan='2'/></tr><tr><td class='label'>context:</td><td class='ctrl'><select name='context' onchange='this.form.submit();'><option value='1'>1</option><option value='2'>2</option><option value='3' selected='selected'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='15'>15</option><option value='20'>20</option><option value='25'>25</option><option value='30'>30</option><option value='35'>35</option><option value='40'>40</option></select></td></tr><tr><td class='label'>space:</td><td class='ctrl'><select name='ignorews' onchange='this.form.submit();'><option value='0' selected='selected'>include</option><option value='1'>ignore</option></select></td></tr><tr><td class='label'>mode:</td><td class='ctrl'><select name='dt' onchange='this.form.submit();'><option value='0' selected='selected'>unified</option><option value='1'>ssdiff</option><option value='2'>stat only</option></select></td></tr><tr><td/><td class='ctrl'><noscript><input type='submit' value='reload'/></noscript></td></tr></table></form></div><div class='diffstat-header'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>Diffstat</a></div><table summary='diffstat' class='diffstat'><tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/Documentation/admin-guide/kernel-parameters.txt?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>Documentation/admin-guide/kernel-parameters.txt</a></td><td class='right'>36</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 32.4%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 67.6%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/x86/include/asm/nospec-branch.h?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/include/asm/nospec-branch.h</a></td><td class='right'>2</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 1.8%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 98.2%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/x86/kernel/cpu/bugs.c?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/kernel/cpu/bugs.c</a></td><td class='right'>111</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 96.4%;'/><td class='rem' style='width: 3.6%;'/><td class='none' style='width: 0.0%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/arch/x86/kvm/vmx/vmx.c?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/kvm/vmx/vmx.c</a></td><td class='right'>3</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 2.7%;'/><td class='rem' style='width: 0.0%;'/><td class='none' style='width: 97.3%;'/></tr></table></td></tr>
</table><div class='diffstat-summary'>4 files changed, 148 insertions, 4 deletions</div><table summary='diff' class='diff'><tr><td><div class='head'>diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt<br/>index fd3d14dabadcb..9f4f3e2ceea60 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/admin-guide/kernel-parameters.txt?id=8b9521e711799f6260765209d5562fe6e6fbf3fc'>Documentation/admin-guide/kernel-parameters.txt</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/admin-guide/kernel-parameters.txt?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>Documentation/admin-guide/kernel-parameters.txt</a></div><div class='hunk'>@@ -3019,6 +3019,7 @@</div><div class='ctx'> 					       kvm.nx_huge_pages=off [X86]</div><div class='ctx'> 					       no_entry_flush [PPC]</div><div class='ctx'> 					       no_uaccess_flush [PPC]</div><div class='add'>+					       mmio_stale_data=off [X86]</div><div class='ctx'> </div><div class='ctx'> 				Exceptions:</div><div class='ctx'> 					       This does not have any effect on</div><div class='hunk'>@@ -3040,6 +3041,7 @@</div><div class='ctx'> 				Equivalent to: l1tf=flush,nosmt [X86]</div><div class='ctx'> 					       mds=full,nosmt [X86]</div><div class='ctx'> 					       tsx_async_abort=full,nosmt [X86]</div><div class='add'>+					       mmio_stale_data=full,nosmt [X86]</div><div class='ctx'> </div><div class='ctx'> 	mminit_loglevel=</div><div class='ctx'> 			[KNL] When CONFIG_DEBUG_MEMORY_INIT is set, this</div><div class='hunk'>@@ -3049,6 +3051,40 @@</div><div class='ctx'> 			log everything. Information is printed at KERN_DEBUG</div><div class='ctx'> 			so loglevel=8 may also need to be specified.</div><div class='ctx'> </div><div class='add'>+	mmio_stale_data=</div><div class='add'>+			[X86,INTEL] Control mitigation for the Processor</div><div class='add'>+			MMIO Stale Data vulnerabilities.</div><div class='add'>+</div><div class='add'>+			Processor MMIO Stale Data is a class of</div><div class='add'>+			vulnerabilities that may expose data after an MMIO</div><div class='add'>+			operation. Exposed data could originate or end in</div><div class='add'>+			the same CPU buffers as affected by MDS and TAA.</div><div class='add'>+			Therefore, similar to MDS and TAA, the mitigation</div><div class='add'>+			is to clear the affected CPU buffers.</div><div class='add'>+</div><div class='add'>+			This parameter controls the mitigation. The</div><div class='add'>+			options are:</div><div class='add'>+</div><div class='add'>+			full       - Enable mitigation on vulnerable CPUs</div><div class='add'>+</div><div class='add'>+			full,nosmt - Enable mitigation and disable SMT on</div><div class='add'>+				     vulnerable CPUs.</div><div class='add'>+</div><div class='add'>+			off        - Unconditionally disable mitigation</div><div class='add'>+</div><div class='add'>+			On MDS or TAA affected machines,</div><div class='add'>+			mmio_stale_data=off can be prevented by an active</div><div class='add'>+			MDS or TAA mitigation as these vulnerabilities are</div><div class='add'>+			mitigated with the same mechanism so in order to</div><div class='add'>+			disable this mitigation, you need to specify</div><div class='add'>+			mds=off and tsx_async_abort=off too.</div><div class='add'>+</div><div class='add'>+			Not specifying this option is equivalent to</div><div class='add'>+			mmio_stale_data=full.</div><div class='add'>+</div><div class='add'>+			For details see:</div><div class='add'>+			Documentation/admin-guide/hw-vuln/processor_mmio_stale_data.rst</div><div class='add'>+</div><div class='ctx'> 	module.sig_enforce</div><div class='ctx'> 			[KNL] When CONFIG_MODULE_SIG is set, this means that</div><div class='ctx'> 			modules without (valid) signatures will fail to load.</div><div class='head'>diff --git a/arch/x86/include/asm/nospec-branch.h b/arch/x86/include/asm/nospec-branch.h<br/>index b3dd514f80a0b..9783c6b088868 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/nospec-branch.h?id=8b9521e711799f6260765209d5562fe6e6fbf3fc'>arch/x86/include/asm/nospec-branch.h</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/include/asm/nospec-branch.h?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/include/asm/nospec-branch.h</a></div><div class='hunk'>@@ -256,6 +256,8 @@ DECLARE_STATIC_KEY_FALSE(mds_idle_clear);</div><div class='ctx'> </div><div class='ctx'> DECLARE_STATIC_KEY_FALSE(switch_mm_cond_l1d_flush);</div><div class='ctx'> </div><div class='add'>+DECLARE_STATIC_KEY_FALSE(mmio_stale_data_clear);</div><div class='add'>+</div><div class='ctx'> #include &lt;asm/segment.h&gt;</div><div class='ctx'> </div><div class='ctx'> /**</div><div class='head'>diff --git a/arch/x86/kernel/cpu/bugs.c b/arch/x86/kernel/cpu/bugs.c<br/>index d52025d585062..5a7a9c3f2d1a1 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/bugs.c?id=8b9521e711799f6260765209d5562fe6e6fbf3fc'>arch/x86/kernel/cpu/bugs.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kernel/cpu/bugs.c?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/kernel/cpu/bugs.c</a></div><div class='hunk'>@@ -43,6 +43,7 @@ static void __init l1tf_select_mitigation(void);</div><div class='ctx'> static void __init mds_select_mitigation(void);</div><div class='ctx'> static void __init md_clear_update_mitigation(void);</div><div class='ctx'> static void __init taa_select_mitigation(void);</div><div class='add'>+static void __init mmio_select_mitigation(void);</div><div class='ctx'> static void __init srbds_select_mitigation(void);</div><div class='ctx'> static void __init l1d_flush_select_mitigation(void);</div><div class='ctx'> </div><div class='hunk'>@@ -85,6 +86,10 @@ EXPORT_SYMBOL_GPL(mds_idle_clear);</div><div class='ctx'>  */</div><div class='ctx'> DEFINE_STATIC_KEY_FALSE(switch_mm_cond_l1d_flush);</div><div class='ctx'> </div><div class='add'>+/* Controls CPU Fill buffer clear before KVM guest MMIO accesses */</div><div class='add'>+DEFINE_STATIC_KEY_FALSE(mmio_stale_data_clear);</div><div class='add'>+EXPORT_SYMBOL_GPL(mmio_stale_data_clear);</div><div class='add'>+</div><div class='ctx'> void __init check_bugs(void)</div><div class='ctx'> {</div><div class='ctx'> 	identify_boot_cpu();</div><div class='hunk'>@@ -119,12 +124,14 @@ void __init check_bugs(void)</div><div class='ctx'> 	l1tf_select_mitigation();</div><div class='ctx'> 	mds_select_mitigation();</div><div class='ctx'> 	taa_select_mitigation();</div><div class='add'>+	mmio_select_mitigation();</div><div class='ctx'> 	srbds_select_mitigation();</div><div class='ctx'> 	l1d_flush_select_mitigation();</div><div class='ctx'> </div><div class='ctx'> 	/*</div><div class='del'>-	 * As MDS and TAA mitigations are inter-related, update and print their</div><div class='del'>-	 * mitigation after TAA mitigation selection is done.</div><div class='add'>+	 * As MDS, TAA and MMIO Stale Data mitigations are inter-related, update</div><div class='add'>+	 * and print their mitigation after MDS, TAA and MMIO Stale Data</div><div class='add'>+	 * mitigation selection is done.</div><div class='ctx'> 	 */</div><div class='ctx'> 	md_clear_update_mitigation();</div><div class='ctx'> </div><div class='hunk'>@@ -391,6 +398,90 @@ static int __init tsx_async_abort_parse_cmdline(char *str)</div><div class='ctx'> early_param("tsx_async_abort", tsx_async_abort_parse_cmdline);</div><div class='ctx'> </div><div class='ctx'> #undef pr_fmt</div><div class='add'>+#define pr_fmt(fmt)	"MMIO Stale Data: " fmt</div><div class='add'>+</div><div class='add'>+enum mmio_mitigations {</div><div class='add'>+	MMIO_MITIGATION_OFF,</div><div class='add'>+	MMIO_MITIGATION_UCODE_NEEDED,</div><div class='add'>+	MMIO_MITIGATION_VERW,</div><div class='add'>+};</div><div class='add'>+</div><div class='add'>+/* Default mitigation for Processor MMIO Stale Data vulnerabilities */</div><div class='add'>+static enum mmio_mitigations mmio_mitigation __ro_after_init = MMIO_MITIGATION_VERW;</div><div class='add'>+static bool mmio_nosmt __ro_after_init = false;</div><div class='add'>+</div><div class='add'>+static const char * const mmio_strings[] = {</div><div class='add'>+	[MMIO_MITIGATION_OFF]		= "Vulnerable",</div><div class='add'>+	[MMIO_MITIGATION_UCODE_NEEDED]	= "Vulnerable: Clear CPU buffers attempted, no microcode",</div><div class='add'>+	[MMIO_MITIGATION_VERW]		= "Mitigation: Clear CPU buffers",</div><div class='add'>+};</div><div class='add'>+</div><div class='add'>+static void __init mmio_select_mitigation(void)</div><div class='add'>+{</div><div class='add'>+	u64 ia32_cap;</div><div class='add'>+</div><div class='add'>+	if (!boot_cpu_has_bug(X86_BUG_MMIO_STALE_DATA) ||</div><div class='add'>+	    cpu_mitigations_off()) {</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_OFF;</div><div class='add'>+		return;</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	if (mmio_mitigation == MMIO_MITIGATION_OFF)</div><div class='add'>+		return;</div><div class='add'>+</div><div class='add'>+	ia32_cap = x86_read_arch_cap_msr();</div><div class='add'>+</div><div class='add'>+	/*</div><div class='add'>+	 * Enable CPU buffer clear mitigation for host and VMM, if also affected</div><div class='add'>+	 * by MDS or TAA. Otherwise, enable mitigation for VMM only.</div><div class='add'>+	 */</div><div class='add'>+	if (boot_cpu_has_bug(X86_BUG_MDS) || (boot_cpu_has_bug(X86_BUG_TAA) &amp;&amp;</div><div class='add'>+					      boot_cpu_has(X86_FEATURE_RTM)))</div><div class='add'>+		static_branch_enable(&amp;mds_user_clear);</div><div class='add'>+	else</div><div class='add'>+		static_branch_enable(&amp;mmio_stale_data_clear);</div><div class='add'>+</div><div class='add'>+	/*</div><div class='add'>+	 * Check if the system has the right microcode.</div><div class='add'>+	 *</div><div class='add'>+	 * CPU Fill buffer clear mitigation is enumerated by either an explicit</div><div class='add'>+	 * FB_CLEAR or by the presence of both MD_CLEAR and L1D_FLUSH on MDS</div><div class='add'>+	 * affected systems.</div><div class='add'>+	 */</div><div class='add'>+	if ((ia32_cap &amp; ARCH_CAP_FB_CLEAR) ||</div><div class='add'>+	    (boot_cpu_has(X86_FEATURE_MD_CLEAR) &amp;&amp;</div><div class='add'>+	     boot_cpu_has(X86_FEATURE_FLUSH_L1D) &amp;&amp;</div><div class='add'>+	     !(ia32_cap &amp; ARCH_CAP_MDS_NO)))</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_VERW;</div><div class='add'>+	else</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_UCODE_NEEDED;</div><div class='add'>+</div><div class='add'>+	if (mmio_nosmt || cpu_mitigations_auto_nosmt())</div><div class='add'>+		cpu_smt_disable(false);</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+static int __init mmio_stale_data_parse_cmdline(char *str)</div><div class='add'>+{</div><div class='add'>+	if (!boot_cpu_has_bug(X86_BUG_MMIO_STALE_DATA))</div><div class='add'>+		return 0;</div><div class='add'>+</div><div class='add'>+	if (!str)</div><div class='add'>+		return -EINVAL;</div><div class='add'>+</div><div class='add'>+	if (!strcmp(str, "off")) {</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_OFF;</div><div class='add'>+	} else if (!strcmp(str, "full")) {</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_VERW;</div><div class='add'>+	} else if (!strcmp(str, "full,nosmt")) {</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_VERW;</div><div class='add'>+		mmio_nosmt = true;</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	return 0;</div><div class='add'>+}</div><div class='add'>+early_param("mmio_stale_data", mmio_stale_data_parse_cmdline);</div><div class='add'>+</div><div class='add'>+#undef pr_fmt</div><div class='ctx'> #define pr_fmt(fmt)     "" fmt</div><div class='ctx'> </div><div class='ctx'> static void __init md_clear_update_mitigation(void)</div><div class='hunk'>@@ -402,19 +493,31 @@ static void __init md_clear_update_mitigation(void)</div><div class='ctx'> 		goto out;</div><div class='ctx'> </div><div class='ctx'> 	/*</div><div class='del'>-	 * mds_user_clear is now enabled. Update MDS mitigation, if</div><div class='del'>-	 * necessary.</div><div class='add'>+	 * mds_user_clear is now enabled. Update MDS, TAA and MMIO Stale Data</div><div class='add'>+	 * mitigation, if necessary.</div><div class='ctx'> 	 */</div><div class='ctx'> 	if (mds_mitigation == MDS_MITIGATION_OFF &amp;&amp;</div><div class='ctx'> 	    boot_cpu_has_bug(X86_BUG_MDS)) {</div><div class='ctx'> 		mds_mitigation = MDS_MITIGATION_FULL;</div><div class='ctx'> 		mds_select_mitigation();</div><div class='ctx'> 	}</div><div class='add'>+	if (taa_mitigation == TAA_MITIGATION_OFF &amp;&amp;</div><div class='add'>+	    boot_cpu_has_bug(X86_BUG_TAA)) {</div><div class='add'>+		taa_mitigation = TAA_MITIGATION_VERW;</div><div class='add'>+		taa_select_mitigation();</div><div class='add'>+	}</div><div class='add'>+	if (mmio_mitigation == MMIO_MITIGATION_OFF &amp;&amp;</div><div class='add'>+	    boot_cpu_has_bug(X86_BUG_MMIO_STALE_DATA)) {</div><div class='add'>+		mmio_mitigation = MMIO_MITIGATION_VERW;</div><div class='add'>+		mmio_select_mitigation();</div><div class='add'>+	}</div><div class='ctx'> out:</div><div class='ctx'> 	if (boot_cpu_has_bug(X86_BUG_MDS))</div><div class='ctx'> 		pr_info("MDS: %s\n", mds_strings[mds_mitigation]);</div><div class='ctx'> 	if (boot_cpu_has_bug(X86_BUG_TAA))</div><div class='ctx'> 		pr_info("TAA: %s\n", taa_strings[taa_mitigation]);</div><div class='add'>+	if (boot_cpu_has_bug(X86_BUG_MMIO_STALE_DATA))</div><div class='add'>+		pr_info("MMIO Stale Data: %s\n", mmio_strings[mmio_mitigation]);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> #undef pr_fmt</div><div class='head'>diff --git a/arch/x86/kvm/vmx/vmx.c b/arch/x86/kvm/vmx/vmx.c<br/>index 16a660a0ed5f7..3deca34747686 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kvm/vmx/vmx.c?id=8b9521e711799f6260765209d5562fe6e6fbf3fc'>arch/x86/kvm/vmx/vmx.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/arch/x86/kvm/vmx/vmx.c?id=d74f4eb1ddf076a55ff0682a89e66af5c1974321'>arch/x86/kvm/vmx/vmx.c</a></div><div class='hunk'>@@ -6613,6 +6613,9 @@ static noinstr void vmx_vcpu_enter_exit(struct kvm_vcpu *vcpu,</div><div class='ctx'> 		vmx_l1d_flush(vcpu);</div><div class='ctx'> 	else if (static_branch_unlikely(&amp;mds_user_clear))</div><div class='ctx'> 		mds_clear_cpu_buffers();</div><div class='add'>+	else if (static_branch_unlikely(&amp;mmio_stale_data_clear) &amp;&amp;</div><div class='add'>+		 kvm_arch_has_assigned_device(vcpu-&gt;kvm))</div><div class='add'>+		mds_clear_cpu_buffers();</div><div class='ctx'> </div><div class='ctx'> 	if (vcpu-&gt;arch.cr2 != native_read_cr2())</div><div class='ctx'> 		native_write_cr2(vcpu-&gt;arch.cr2);</div></td></tr></table></div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit </a> (<a href='https://git-scm.com/'>git 2.34.1</a>) at 2023-02-02 23:01:01 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
