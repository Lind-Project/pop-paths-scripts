<!DOCTYPE html>
<html lang='en'>
<head>
<title>kernel/git/torvalds/linux.git - Linux kernel source tree</title>
<meta name='generator' content='cgit '/>
<meta name='robots' content='noindex, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/atom/?h=master' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='kernel/git/torvalds/linux.git' href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>kernel/git/torvalds/linux.git</a></td><td class='form'><form method='get'>
<input type='hidden' name='id' value='492eb7afe858d60408b2da09adc78540c4d16543'/><select name='h' onchange='this.form.submit();'>
<option value='master' selected='selected'>master</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>Linux kernel source tree</td><td class='sub right'>Linus Torvalds</td></tr></table>
<table class='tabs'><tr><td>
<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/about/'>about</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>summary</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/refs/?id=492eb7afe858d60408b2da09adc78540c4d16543'>refs</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>log</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/?id=492eb7afe858d60408b2da09adc78540c4d16543'>tree</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=492eb7afe858d60408b2da09adc78540c4d16543'>commit</a><a class='active' href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=492eb7afe858d60408b2da09adc78540c4d16543'>diff</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/stats/'>stats</a></td><td class='form'><form class='right' method='get' action='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>
<input type='hidden' name='id' value='492eb7afe858d60408b2da09adc78540c4d16543'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='content'><div class='cgit-panel'><b>diff options</b><form method='get'><input type='hidden' name='id' value='492eb7afe858d60408b2da09adc78540c4d16543'/><table><tr><td colspan='2'/></tr><tr><td class='label'>context:</td><td class='ctrl'><select name='context' onchange='this.form.submit();'><option value='1'>1</option><option value='2'>2</option><option value='3' selected='selected'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='15'>15</option><option value='20'>20</option><option value='25'>25</option><option value='30'>30</option><option value='35'>35</option><option value='40'>40</option></select></td></tr><tr><td class='label'>space:</td><td class='ctrl'><select name='ignorews' onchange='this.form.submit();'><option value='0' selected='selected'>include</option><option value='1'>ignore</option></select></td></tr><tr><td class='label'>mode:</td><td class='ctrl'><select name='dt' onchange='this.form.submit();'><option value='0' selected='selected'>unified</option><option value='1'>ssdiff</option><option value='2'>stat only</option></select></td></tr><tr><td/><td class='ctrl'><noscript><input type='submit' value='reload'/></noscript></td></tr></table></form></div><div class='diffstat-header'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=492eb7afe858d60408b2da09adc78540c4d16543'>Diffstat</a></div><table summary='diffstat' class='diffstat'><tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/drivers/tee/tee_shm.c?id=492eb7afe858d60408b2da09adc78540c4d16543'>drivers/tee/tee_shm.c</a></td><td class='right'>171</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 38.6%;'/><td class='rem' style='width: 61.4%;'/><td class='none' style='width: 0.0%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/include/linux/tee_drv.h?id=492eb7afe858d60408b2da09adc78540c4d16543'>include/linux/tee_drv.h</a></td><td class='right'>4</td><td class='graph'><table summary='file diffstat' width='100%'><tr><td class='add' style='width: 1.2%;'/><td class='rem' style='width: 1.2%;'/><td class='none' style='width: 97.7%;'/></tr></table></td></tr>
</table><div class='diffstat-summary'>2 files changed, 68 insertions, 107 deletions</div><table summary='diff' class='diff'><tr><td><div class='head'>diff --git a/drivers/tee/tee_shm.c b/drivers/tee/tee_shm.c<br/>index 8a9384a64f3e2..499fccba3d74b 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/tee/tee_shm.c?id=c576d7a197b72f3dfb73f80685ca661c1c63690f'>drivers/tee/tee_shm.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/drivers/tee/tee_shm.c?id=492eb7afe858d60408b2da09adc78540c4d16543'>drivers/tee/tee_shm.c</a></div><div class='hunk'>@@ -1,11 +1,11 @@</div><div class='ctx'> // SPDX-License-Identifier: GPL-2.0-only</div><div class='ctx'> /*</div><div class='del'>- * Copyright (c) 2015-2016, Linaro Limited</div><div class='add'>+ * Copyright (c) 2015-2017, 2019-2021 Linaro Limited</div><div class='ctx'>  */</div><div class='add'>+#include &lt;linux/anon_inodes.h&gt;</div><div class='ctx'> #include &lt;linux/device.h&gt;</div><div class='del'>-#include &lt;linux/dma-buf.h&gt;</div><div class='del'>-#include &lt;linux/fdtable.h&gt;</div><div class='ctx'> #include &lt;linux/idr.h&gt;</div><div class='add'>+#include &lt;linux/mm.h&gt;</div><div class='ctx'> #include &lt;linux/sched.h&gt;</div><div class='ctx'> #include &lt;linux/slab.h&gt;</div><div class='ctx'> #include &lt;linux/tee_drv.h&gt;</div><div class='hunk'>@@ -28,16 +28,8 @@ static void release_registered_pages(struct tee_shm *shm)</div><div class='ctx'> 	}</div><div class='ctx'> }</div><div class='ctx'> </div><div class='del'>-static void tee_shm_release(struct tee_shm *shm)</div><div class='add'>+static void tee_shm_release(struct tee_device *teedev, struct tee_shm *shm)</div><div class='ctx'> {</div><div class='del'>-	struct tee_device *teedev = shm-&gt;ctx-&gt;teedev;</div><div class='del'>-</div><div class='del'>-	if (shm-&gt;flags &amp; TEE_SHM_DMA_BUF) {</div><div class='del'>-		mutex_lock(&amp;teedev-&gt;mutex);</div><div class='del'>-		idr_remove(&amp;teedev-&gt;idr, shm-&gt;id);</div><div class='del'>-		mutex_unlock(&amp;teedev-&gt;mutex);</div><div class='del'>-	}</div><div class='del'>-</div><div class='ctx'> 	if (shm-&gt;flags &amp; TEE_SHM_POOL) {</div><div class='ctx'> 		struct tee_shm_pool_mgr *poolm;</div><div class='ctx'> </div><div class='hunk'>@@ -64,45 +56,6 @@ static void tee_shm_release(struct tee_shm *shm)</div><div class='ctx'> 	tee_device_put(teedev);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='del'>-static struct sg_table *tee_shm_op_map_dma_buf(struct dma_buf_attachment</div><div class='del'>-			*attach, enum dma_data_direction dir)</div><div class='del'>-{</div><div class='del'>-	return NULL;</div><div class='del'>-}</div><div class='del'>-</div><div class='del'>-static void tee_shm_op_unmap_dma_buf(struct dma_buf_attachment *attach,</div><div class='del'>-				     struct sg_table *table,</div><div class='del'>-				     enum dma_data_direction dir)</div><div class='del'>-{</div><div class='del'>-}</div><div class='del'>-</div><div class='del'>-static void tee_shm_op_release(struct dma_buf *dmabuf)</div><div class='del'>-{</div><div class='del'>-	struct tee_shm *shm = dmabuf-&gt;priv;</div><div class='del'>-</div><div class='del'>-	tee_shm_release(shm);</div><div class='del'>-}</div><div class='del'>-</div><div class='del'>-static int tee_shm_op_mmap(struct dma_buf *dmabuf, struct vm_area_struct *vma)</div><div class='del'>-{</div><div class='del'>-	struct tee_shm *shm = dmabuf-&gt;priv;</div><div class='del'>-	size_t size = vma-&gt;vm_end - vma-&gt;vm_start;</div><div class='del'>-</div><div class='del'>-	/* Refuse sharing shared memory provided by application */</div><div class='del'>-	if (shm-&gt;flags &amp; TEE_SHM_USER_MAPPED)</div><div class='del'>-		return -EINVAL;</div><div class='del'>-</div><div class='del'>-	return remap_pfn_range(vma, vma-&gt;vm_start, shm-&gt;paddr &gt;&gt; PAGE_SHIFT,</div><div class='del'>-			       size, vma-&gt;vm_page_prot);</div><div class='del'>-}</div><div class='del'>-</div><div class='del'>-static const struct dma_buf_ops tee_shm_dma_buf_ops = {</div><div class='del'>-	.map_dma_buf = tee_shm_op_map_dma_buf,</div><div class='del'>-	.unmap_dma_buf = tee_shm_op_unmap_dma_buf,</div><div class='del'>-	.release = tee_shm_op_release,</div><div class='del'>-	.mmap = tee_shm_op_mmap,</div><div class='del'>-};</div><div class='del'>-</div><div class='ctx'> struct tee_shm *tee_shm_alloc(struct tee_context *ctx, size_t size, u32 flags)</div><div class='ctx'> {</div><div class='ctx'> 	struct tee_device *teedev = ctx-&gt;teedev;</div><div class='hunk'>@@ -137,6 +90,7 @@ struct tee_shm *tee_shm_alloc(struct tee_context *ctx, size_t size, u32 flags)</div><div class='ctx'> 		goto err_dev_put;</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='add'>+	refcount_set(&amp;shm-&gt;refcount, 1);</div><div class='ctx'> 	shm-&gt;flags = flags | TEE_SHM_POOL;</div><div class='ctx'> 	shm-&gt;ctx = ctx;</div><div class='ctx'> 	if (flags &amp; TEE_SHM_DMA_BUF)</div><div class='hunk'>@@ -150,10 +104,7 @@ struct tee_shm *tee_shm_alloc(struct tee_context *ctx, size_t size, u32 flags)</div><div class='ctx'> 		goto err_kfree;</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='del'>-</div><div class='ctx'> 	if (flags &amp; TEE_SHM_DMA_BUF) {</div><div class='del'>-		DEFINE_DMA_BUF_EXPORT_INFO(exp_info);</div><div class='del'>-</div><div class='ctx'> 		mutex_lock(&amp;teedev-&gt;mutex);</div><div class='ctx'> 		shm-&gt;id = idr_alloc(&amp;teedev-&gt;idr, shm, 1, 0, GFP_KERNEL);</div><div class='ctx'> 		mutex_unlock(&amp;teedev-&gt;mutex);</div><div class='hunk'>@@ -161,28 +112,11 @@ struct tee_shm *tee_shm_alloc(struct tee_context *ctx, size_t size, u32 flags)</div><div class='ctx'> 			ret = ERR_PTR(shm-&gt;id);</div><div class='ctx'> 			goto err_pool_free;</div><div class='ctx'> 		}</div><div class='del'>-</div><div class='del'>-		exp_info.ops = &amp;tee_shm_dma_buf_ops;</div><div class='del'>-		exp_info.size = shm-&gt;size;</div><div class='del'>-		exp_info.flags = O_RDWR;</div><div class='del'>-		exp_info.priv = shm;</div><div class='del'>-</div><div class='del'>-		shm-&gt;dmabuf = dma_buf_export(&amp;exp_info);</div><div class='del'>-		if (IS_ERR(shm-&gt;dmabuf)) {</div><div class='del'>-			ret = ERR_CAST(shm-&gt;dmabuf);</div><div class='del'>-			goto err_rem;</div><div class='del'>-		}</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='ctx'> 	teedev_ctx_get(ctx);</div><div class='ctx'> </div><div class='ctx'> 	return shm;</div><div class='del'>-err_rem:</div><div class='del'>-	if (flags &amp; TEE_SHM_DMA_BUF) {</div><div class='del'>-		mutex_lock(&amp;teedev-&gt;mutex);</div><div class='del'>-		idr_remove(&amp;teedev-&gt;idr, shm-&gt;id);</div><div class='del'>-		mutex_unlock(&amp;teedev-&gt;mutex);</div><div class='del'>-	}</div><div class='ctx'> err_pool_free:</div><div class='ctx'> 	poolm-&gt;ops-&gt;free(poolm, shm);</div><div class='ctx'> err_kfree:</div><div class='hunk'>@@ -243,6 +177,7 @@ struct tee_shm *tee_shm_register(struct tee_context *ctx, unsigned long addr,</div><div class='ctx'> 		goto err;</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='add'>+	refcount_set(&amp;shm-&gt;refcount, 1);</div><div class='ctx'> 	shm-&gt;flags = flags | TEE_SHM_REGISTER;</div><div class='ctx'> 	shm-&gt;ctx = ctx;</div><div class='ctx'> 	shm-&gt;id = -1;</div><div class='hunk'>@@ -303,22 +238,6 @@ struct tee_shm *tee_shm_register(struct tee_context *ctx, unsigned long addr,</div><div class='ctx'> 		goto err;</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='del'>-	if (flags &amp; TEE_SHM_DMA_BUF) {</div><div class='del'>-		DEFINE_DMA_BUF_EXPORT_INFO(exp_info);</div><div class='del'>-</div><div class='del'>-		exp_info.ops = &amp;tee_shm_dma_buf_ops;</div><div class='del'>-		exp_info.size = shm-&gt;size;</div><div class='del'>-		exp_info.flags = O_RDWR;</div><div class='del'>-		exp_info.priv = shm;</div><div class='del'>-</div><div class='del'>-		shm-&gt;dmabuf = dma_buf_export(&amp;exp_info);</div><div class='del'>-		if (IS_ERR(shm-&gt;dmabuf)) {</div><div class='del'>-			ret = ERR_CAST(shm-&gt;dmabuf);</div><div class='del'>-			teedev-&gt;desc-&gt;ops-&gt;shm_unregister(ctx, shm);</div><div class='del'>-			goto err;</div><div class='del'>-		}</div><div class='del'>-	}</div><div class='del'>-</div><div class='ctx'> 	return shm;</div><div class='ctx'> err:</div><div class='ctx'> 	if (shm) {</div><div class='hunk'>@@ -336,6 +255,35 @@ err:</div><div class='ctx'> }</div><div class='ctx'> EXPORT_SYMBOL_GPL(tee_shm_register);</div><div class='ctx'> </div><div class='add'>+static int tee_shm_fop_release(struct inode *inode, struct file *filp)</div><div class='add'>+{</div><div class='add'>+	tee_shm_put(filp-&gt;private_data);</div><div class='add'>+	return 0;</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+static int tee_shm_fop_mmap(struct file *filp, struct vm_area_struct *vma)</div><div class='add'>+{</div><div class='add'>+	struct tee_shm *shm = filp-&gt;private_data;</div><div class='add'>+	size_t size = vma-&gt;vm_end - vma-&gt;vm_start;</div><div class='add'>+</div><div class='add'>+	/* Refuse sharing shared memory provided by application */</div><div class='add'>+	if (shm-&gt;flags &amp; TEE_SHM_USER_MAPPED)</div><div class='add'>+		return -EINVAL;</div><div class='add'>+</div><div class='add'>+	/* check for overflowing the buffer's size */</div><div class='add'>+	if (vma-&gt;vm_pgoff + vma_pages(vma) &gt; shm-&gt;size &gt;&gt; PAGE_SHIFT)</div><div class='add'>+		return -EINVAL;</div><div class='add'>+</div><div class='add'>+	return remap_pfn_range(vma, vma-&gt;vm_start, shm-&gt;paddr &gt;&gt; PAGE_SHIFT,</div><div class='add'>+			       size, vma-&gt;vm_page_prot);</div><div class='add'>+}</div><div class='add'>+</div><div class='add'>+static const struct file_operations tee_shm_fops = {</div><div class='add'>+	.owner = THIS_MODULE,</div><div class='add'>+	.release = tee_shm_fop_release,</div><div class='add'>+	.mmap = tee_shm_fop_mmap,</div><div class='add'>+};</div><div class='add'>+</div><div class='ctx'> /**</div><div class='ctx'>  * tee_shm_get_fd() - Increase reference count and return file descriptor</div><div class='ctx'>  * @shm:	Shared memory handle</div><div class='hunk'>@@ -348,10 +296,11 @@ int tee_shm_get_fd(struct tee_shm *shm)</div><div class='ctx'> 	if (!(shm-&gt;flags &amp; TEE_SHM_DMA_BUF))</div><div class='ctx'> 		return -EINVAL;</div><div class='ctx'> </div><div class='del'>-	get_dma_buf(shm-&gt;dmabuf);</div><div class='del'>-	fd = dma_buf_fd(shm-&gt;dmabuf, O_CLOEXEC);</div><div class='add'>+	/* matched by tee_shm_put() in tee_shm_op_release() */</div><div class='add'>+	refcount_inc(&amp;shm-&gt;refcount);</div><div class='add'>+	fd = anon_inode_getfd("tee_shm", &amp;tee_shm_fops, shm, O_RDWR);</div><div class='ctx'> 	if (fd &lt; 0)</div><div class='del'>-		dma_buf_put(shm-&gt;dmabuf);</div><div class='add'>+		tee_shm_put(shm);</div><div class='ctx'> 	return fd;</div><div class='ctx'> }</div><div class='ctx'> </div><div class='hunk'>@@ -361,17 +310,7 @@ int tee_shm_get_fd(struct tee_shm *shm)</div><div class='ctx'>  */</div><div class='ctx'> void tee_shm_free(struct tee_shm *shm)</div><div class='ctx'> {</div><div class='del'>-	/*</div><div class='del'>-	 * dma_buf_put() decreases the dmabuf reference counter and will</div><div class='del'>-	 * call tee_shm_release() when the last reference is gone.</div><div class='del'>-	 *</div><div class='del'>-	 * In the case of driver private memory we call tee_shm_release</div><div class='del'>-	 * directly instead as it doesn't have a reference counter.</div><div class='del'>-	 */</div><div class='del'>-	if (shm-&gt;flags &amp; TEE_SHM_DMA_BUF)</div><div class='del'>-		dma_buf_put(shm-&gt;dmabuf);</div><div class='del'>-	else</div><div class='del'>-		tee_shm_release(shm);</div><div class='add'>+	tee_shm_put(shm);</div><div class='ctx'> }</div><div class='ctx'> EXPORT_SYMBOL_GPL(tee_shm_free);</div><div class='ctx'> </div><div class='hunk'>@@ -478,10 +417,15 @@ struct tee_shm *tee_shm_get_from_id(struct tee_context *ctx, int id)</div><div class='ctx'> 	teedev = ctx-&gt;teedev;</div><div class='ctx'> 	mutex_lock(&amp;teedev-&gt;mutex);</div><div class='ctx'> 	shm = idr_find(&amp;teedev-&gt;idr, id);</div><div class='add'>+	/*</div><div class='add'>+	 * If the tee_shm was found in the IDR it must have a refcount</div><div class='add'>+	 * larger than 0 due to the guarantee in tee_shm_put() below. So</div><div class='add'>+	 * it's safe to use refcount_inc().</div><div class='add'>+	 */</div><div class='ctx'> 	if (!shm || shm-&gt;ctx != ctx)</div><div class='ctx'> 		shm = ERR_PTR(-EINVAL);</div><div class='del'>-	else if (shm-&gt;flags &amp; TEE_SHM_DMA_BUF)</div><div class='del'>-		get_dma_buf(shm-&gt;dmabuf);</div><div class='add'>+	else</div><div class='add'>+		refcount_inc(&amp;shm-&gt;refcount);</div><div class='ctx'> 	mutex_unlock(&amp;teedev-&gt;mutex);</div><div class='ctx'> 	return shm;</div><div class='ctx'> }</div><div class='hunk'>@@ -493,7 +437,24 @@ EXPORT_SYMBOL_GPL(tee_shm_get_from_id);</div><div class='ctx'>  */</div><div class='ctx'> void tee_shm_put(struct tee_shm *shm)</div><div class='ctx'> {</div><div class='del'>-	if (shm-&gt;flags &amp; TEE_SHM_DMA_BUF)</div><div class='del'>-		dma_buf_put(shm-&gt;dmabuf);</div><div class='add'>+	struct tee_device *teedev = shm-&gt;ctx-&gt;teedev;</div><div class='add'>+	bool do_release = false;</div><div class='add'>+</div><div class='add'>+	mutex_lock(&amp;teedev-&gt;mutex);</div><div class='add'>+	if (refcount_dec_and_test(&amp;shm-&gt;refcount)) {</div><div class='add'>+		/*</div><div class='add'>+		 * refcount has reached 0, we must now remove it from the</div><div class='add'>+		 * IDR before releasing the mutex. This will guarantee that</div><div class='add'>+		 * the refcount_inc() in tee_shm_get_from_id() never starts</div><div class='add'>+		 * from 0.</div><div class='add'>+		 */</div><div class='add'>+		if (shm-&gt;flags &amp; TEE_SHM_DMA_BUF)</div><div class='add'>+			idr_remove(&amp;teedev-&gt;idr, shm-&gt;id);</div><div class='add'>+		do_release = true;</div><div class='add'>+	}</div><div class='add'>+	mutex_unlock(&amp;teedev-&gt;mutex);</div><div class='add'>+</div><div class='add'>+	if (do_release)</div><div class='add'>+		tee_shm_release(teedev, shm);</div><div class='ctx'> }</div><div class='ctx'> EXPORT_SYMBOL_GPL(tee_shm_put);</div><div class='head'>diff --git a/include/linux/tee_drv.h b/include/linux/tee_drv.h<br/>index 3ebfea0781f10..feda1dc7f98ee 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/tee_drv.h?id=c576d7a197b72f3dfb73f80685ca661c1c63690f'>include/linux/tee_drv.h</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/tee_drv.h?id=492eb7afe858d60408b2da09adc78540c4d16543'>include/linux/tee_drv.h</a></div><div class='hunk'>@@ -195,7 +195,7 @@ int tee_session_calc_client_uuid(uuid_t *uuid, u32 connection_method,</div><div class='ctx'>  * @offset:	offset of buffer in user space</div><div class='ctx'>  * @pages:	locked pages from userspace</div><div class='ctx'>  * @num_pages:	number of locked pages</div><div class='del'>- * @dmabuf:	dmabuf used to for exporting to user space</div><div class='add'>+ * @refcount:	reference counter</div><div class='ctx'>  * @flags:	defined by TEE_SHM_* in tee_drv.h</div><div class='ctx'>  * @id:		unique id of a shared memory object on this device</div><div class='ctx'>  *</div><div class='hunk'>@@ -210,7 +210,7 @@ struct tee_shm {</div><div class='ctx'> 	unsigned int offset;</div><div class='ctx'> 	struct page **pages;</div><div class='ctx'> 	size_t num_pages;</div><div class='del'>-	struct dma_buf *dmabuf;</div><div class='add'>+	refcount_t refcount;</div><div class='ctx'> 	u32 flags;</div><div class='ctx'> 	int id;</div><div class='ctx'> };</div></td></tr></table></div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit </a> (<a href='https://git-scm.com/'>git 2.34.1</a>) at 2023-02-02 23:00:21 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
