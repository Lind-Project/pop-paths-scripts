<!DOCTYPE html>
<html lang='en'>
<head>
<title>kernel/git/torvalds/linux.git - Linux kernel source tree</title>
<meta name='generator' content='cgit '/>
<meta name='robots' content='noindex, nofollow'/>
<link rel='stylesheet' type='text/css' href='/cgit-data/cgit.css'/>
<link rel='shortcut icon' href='/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='http://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/atom/?h=master' type='application/atom+xml'/>
<link rel='vcs-git' href='git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
<link rel='vcs-git' href='https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux.git' title='kernel/git/torvalds/linux.git Git repository'/>
</head>
<body>
<div id='cgit'><table id='header'>
<tr>
<td class='logo' rowspan='2'><a href='/'><img src='/cgit-data/cgit.png' alt='cgit logo'/></a></td>
<td class='main'><a href='/'>index</a> : <a title='kernel/git/torvalds/linux.git' href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>kernel/git/torvalds/linux.git</a></td><td class='form'><form method='get'>
<input type='hidden' name='id' value='d3e4c61e143e69671803ef3f52140cf7a7258ee7'/><select name='h' onchange='this.form.submit();'>
<option value='master' selected='selected'>master</option>
</select> <input type='submit' value='switch'/></form></td></tr>
<tr><td class='sub'>Linux kernel source tree</td><td class='sub right'>Linus Torvalds</td></tr></table>
<table class='tabs'><tr><td>
<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/about/'>about</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/'>summary</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/refs/?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>refs</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>log</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>tree</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>commit</a><a class='active' href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>diff</a><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/stats/'>stats</a></td><td class='form'><form class='right' method='get' action='/pub/scm/linux/kernel/git/torvalds/linux.git/log/'>
<input type='hidden' name='id' value='d3e4c61e143e69671803ef3f52140cf7a7258ee7'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='content'><div class='cgit-panel'><b>diff options</b><form method='get'><input type='hidden' name='id' value='d3e4c61e143e69671803ef3f52140cf7a7258ee7'/><table><tr><td colspan='2'/></tr><tr><td class='label'>context:</td><td class='ctrl'><select name='context' onchange='this.form.submit();'><option value='1'>1</option><option value='2'>2</option><option value='3' selected='selected'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='15'>15</option><option value='20'>20</option><option value='25'>25</option><option value='30'>30</option><option value='35'>35</option><option value='40'>40</option></select></td></tr><tr><td class='label'>space:</td><td class='ctrl'><select name='ignorews' onchange='this.form.submit();'><option value='0' selected='selected'>include</option><option value='1'>ignore</option></select></td></tr><tr><td class='label'>mode:</td><td class='ctrl'><select name='dt' onchange='this.form.submit();'><option value='0' selected='selected'>unified</option><option value='1'>ssdiff</option><option value='2'>stat only</option></select></td></tr><tr><td/><td class='ctrl'><noscript><input type='submit' value='reload'/></noscript></td></tr></table></form></div><div class='diffstat-header'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>Diffstat</a></div><table summary='diffstat' class='diffstat'><tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/Documentation/accounting/psi.rst?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>Documentation/accounting/psi.rst</a></td><td class='right'>3</td><td class='graph'><table summary='file diffstat' width='66%'><tr><td class='add' style='width: 3.0%;'/><td class='rem' style='width: 1.5%;'/><td class='none' style='width: 95.5%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/include/linux/psi.h?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>include/linux/psi.h</a></td><td class='right'>2</td><td class='graph'><table summary='file diffstat' width='66%'><tr><td class='add' style='width: 1.5%;'/><td class='rem' style='width: 1.5%;'/><td class='none' style='width: 97.0%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/include/linux/psi_types.h?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>include/linux/psi_types.h</a></td><td class='right'>3</td><td class='graph'><table summary='file diffstat' width='66%'><tr><td class='add' style='width: 0.0%;'/><td class='rem' style='width: 4.5%;'/><td class='none' style='width: 95.5%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/kernel/cgroup/cgroup.c?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>kernel/cgroup/cgroup.c</a></td><td class='right'>11</td><td class='graph'><table summary='file diffstat' width='66%'><tr><td class='add' style='width: 12.1%;'/><td class='rem' style='width: 4.5%;'/><td class='none' style='width: 83.3%;'/></tr></table></td></tr>
<tr><td class='mode'>-rw-r--r--</td><td class='upd'><a href='/pub/scm/linux/kernel/git/torvalds/linux.git/diff/kernel/sched/psi.c?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>kernel/sched/psi.c</a></td><td class='right'>66</td><td class='graph'><table summary='file diffstat' width='66%'><tr><td class='add' style='width: 43.9%;'/><td class='rem' style='width: 56.1%;'/><td class='none' style='width: 0.0%;'/></tr></table></td></tr>
</table><div class='diffstat-summary'>5 files changed, 40 insertions, 45 deletions</div><table summary='diff' class='diff'><tr><td><div class='head'>diff --git a/Documentation/accounting/psi.rst b/Documentation/accounting/psi.rst<br/>index f2b3439edcc2c..860fe651d6453 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/accounting/psi.rst?id=b17cb93dda1dcdc9737c8b334e850c18dc6b0b7d'>Documentation/accounting/psi.rst</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/accounting/psi.rst?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>Documentation/accounting/psi.rst</a></div><div class='hunk'>@@ -92,7 +92,8 @@ Triggers can be set on more than one psi metric and more than one trigger</div><div class='ctx'> for the same psi metric can be specified. However for each trigger a separate</div><div class='ctx'> file descriptor is required to be able to poll it separately from others,</div><div class='ctx'> therefore for each trigger a separate open() syscall should be made even</div><div class='del'>-when opening the same psi interface file.</div><div class='add'>+when opening the same psi interface file. Write operations to a file descriptor</div><div class='add'>+with an already existing psi trigger will fail with EBUSY.</div><div class='ctx'> </div><div class='ctx'> Monitors activate only when system enters stall state for the monitored</div><div class='ctx'> psi metric and deactivates upon exit from the stall state. While system is</div><div class='head'>diff --git a/include/linux/psi.h b/include/linux/psi.h<br/>index 65eb1476ac705..74f7148dfb9f4 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/psi.h?id=b17cb93dda1dcdc9737c8b334e850c18dc6b0b7d'>include/linux/psi.h</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/psi.h?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>include/linux/psi.h</a></div><div class='hunk'>@@ -32,7 +32,7 @@ void cgroup_move_task(struct task_struct *p, struct css_set *to);</div><div class='ctx'> </div><div class='ctx'> struct psi_trigger *psi_trigger_create(struct psi_group *group,</div><div class='ctx'> 			char *buf, size_t nbytes, enum psi_res res);</div><div class='del'>-void psi_trigger_replace(void **trigger_ptr, struct psi_trigger *t);</div><div class='add'>+void psi_trigger_destroy(struct psi_trigger *t);</div><div class='ctx'> </div><div class='ctx'> __poll_t psi_trigger_poll(void **trigger_ptr, struct file *file,</div><div class='ctx'> 			poll_table *wait);</div><div class='head'>diff --git a/include/linux/psi_types.h b/include/linux/psi_types.h<br/>index 0819c82dba920..6f190002a2022 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/psi_types.h?id=b17cb93dda1dcdc9737c8b334e850c18dc6b0b7d'>include/linux/psi_types.h</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/psi_types.h?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>include/linux/psi_types.h</a></div><div class='hunk'>@@ -140,9 +140,6 @@ struct psi_trigger {</div><div class='ctx'> 	 * events to one per window</div><div class='ctx'> 	 */</div><div class='ctx'> 	u64 last_event_time;</div><div class='del'>-</div><div class='del'>-	/* Refcounting to prevent premature destruction */</div><div class='del'>-	struct kref refcount;</div><div class='ctx'> };</div><div class='ctx'> </div><div class='ctx'> struct psi_group {</div><div class='head'>diff --git a/kernel/cgroup/cgroup.c b/kernel/cgroup/cgroup.c<br/>index bb1a78ff14374..de8b4fa1e1fd6 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/cgroup/cgroup.c?id=b17cb93dda1dcdc9737c8b334e850c18dc6b0b7d'>kernel/cgroup/cgroup.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/cgroup/cgroup.c?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>kernel/cgroup/cgroup.c</a></div><div class='hunk'>@@ -3642,6 +3642,12 @@ static ssize_t cgroup_pressure_write(struct kernfs_open_file *of, char *buf,</div><div class='ctx'> 	cgroup_get(cgrp);</div><div class='ctx'> 	cgroup_kn_unlock(of-&gt;kn);</div><div class='ctx'> </div><div class='add'>+	/* Allow only one trigger per file descriptor */</div><div class='add'>+	if (ctx-&gt;psi.trigger) {</div><div class='add'>+		cgroup_put(cgrp);</div><div class='add'>+		return -EBUSY;</div><div class='add'>+	}</div><div class='add'>+</div><div class='ctx'> 	psi = cgroup_ino(cgrp) == 1 ? &amp;psi_system : &amp;cgrp-&gt;psi;</div><div class='ctx'> 	new = psi_trigger_create(psi, buf, nbytes, res);</div><div class='ctx'> 	if (IS_ERR(new)) {</div><div class='hunk'>@@ -3649,8 +3655,7 @@ static ssize_t cgroup_pressure_write(struct kernfs_open_file *of, char *buf,</div><div class='ctx'> 		return PTR_ERR(new);</div><div class='ctx'> 	}</div><div class='ctx'> </div><div class='del'>-	psi_trigger_replace(&amp;ctx-&gt;psi.trigger, new);</div><div class='del'>-</div><div class='add'>+	smp_store_release(&amp;ctx-&gt;psi.trigger, new);</div><div class='ctx'> 	cgroup_put(cgrp);</div><div class='ctx'> </div><div class='ctx'> 	return nbytes;</div><div class='hunk'>@@ -3689,7 +3694,7 @@ static void cgroup_pressure_release(struct kernfs_open_file *of)</div><div class='ctx'> {</div><div class='ctx'> 	struct cgroup_file_ctx *ctx = of-&gt;priv;</div><div class='ctx'> </div><div class='del'>-	psi_trigger_replace(&amp;ctx-&gt;psi.trigger, NULL);</div><div class='add'>+	psi_trigger_destroy(ctx-&gt;psi.trigger);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='ctx'> bool cgroup_psi_enabled(void)</div><div class='head'>diff --git a/kernel/sched/psi.c b/kernel/sched/psi.c<br/>index 69b19d3af690f..ab460f8b77d13 100644<br/>--- a/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/sched/psi.c?id=b17cb93dda1dcdc9737c8b334e850c18dc6b0b7d'>kernel/sched/psi.c</a><br/>+++ b/<a href='/pub/scm/linux/kernel/git/torvalds/linux.git/tree/kernel/sched/psi.c?id=d3e4c61e143e69671803ef3f52140cf7a7258ee7'>kernel/sched/psi.c</a></div><div class='hunk'>@@ -1162,7 +1162,6 @@ struct psi_trigger *psi_trigger_create(struct psi_group *group,</div><div class='ctx'> 	t-&gt;event = 0;</div><div class='ctx'> 	t-&gt;last_event_time = 0;</div><div class='ctx'> 	init_waitqueue_head(&amp;t-&gt;event_wait);</div><div class='del'>-	kref_init(&amp;t-&gt;refcount);</div><div class='ctx'> </div><div class='ctx'> 	mutex_lock(&amp;group-&gt;trigger_lock);</div><div class='ctx'> </div><div class='hunk'>@@ -1191,15 +1190,19 @@ struct psi_trigger *psi_trigger_create(struct psi_group *group,</div><div class='ctx'> 	return t;</div><div class='ctx'> }</div><div class='ctx'> </div><div class='del'>-static void psi_trigger_destroy(struct kref *ref)</div><div class='add'>+void psi_trigger_destroy(struct psi_trigger *t)</div><div class='ctx'> {</div><div class='del'>-	struct psi_trigger *t = container_of(ref, struct psi_trigger, refcount);</div><div class='del'>-	struct psi_group *group = t-&gt;group;</div><div class='add'>+	struct psi_group *group;</div><div class='ctx'> 	struct task_struct *task_to_destroy = NULL;</div><div class='ctx'> </div><div class='del'>-	if (static_branch_likely(&amp;psi_disabled))</div><div class='add'>+	/*</div><div class='add'>+	 * We do not check psi_disabled since it might have been disabled after</div><div class='add'>+	 * the trigger got created.</div><div class='add'>+	 */</div><div class='add'>+	if (!t)</div><div class='ctx'> 		return;</div><div class='ctx'> </div><div class='add'>+	group = t-&gt;group;</div><div class='ctx'> 	/*</div><div class='ctx'> 	 * Wakeup waiters to stop polling. Can happen if cgroup is deleted</div><div class='ctx'> 	 * from under a polling process.</div><div class='hunk'>@@ -1235,9 +1238,9 @@ static void psi_trigger_destroy(struct kref *ref)</div><div class='ctx'> 	mutex_unlock(&amp;group-&gt;trigger_lock);</div><div class='ctx'> </div><div class='ctx'> 	/*</div><div class='del'>-	 * Wait for both *trigger_ptr from psi_trigger_replace and</div><div class='del'>-	 * poll_task RCUs to complete their read-side critical sections</div><div class='del'>-	 * before destroying the trigger and optionally the poll_task</div><div class='add'>+	 * Wait for psi_schedule_poll_work RCU to complete its read-side</div><div class='add'>+	 * critical section before destroying the trigger and optionally the</div><div class='add'>+	 * poll_task.</div><div class='ctx'> 	 */</div><div class='ctx'> 	synchronize_rcu();</div><div class='ctx'> 	/*</div><div class='hunk'>@@ -1254,18 +1257,6 @@ static void psi_trigger_destroy(struct kref *ref)</div><div class='ctx'> 	kfree(t);</div><div class='ctx'> }</div><div class='ctx'> </div><div class='del'>-void psi_trigger_replace(void **trigger_ptr, struct psi_trigger *new)</div><div class='del'>-{</div><div class='del'>-	struct psi_trigger *old = *trigger_ptr;</div><div class='del'>-</div><div class='del'>-	if (static_branch_likely(&amp;psi_disabled))</div><div class='del'>-		return;</div><div class='del'>-</div><div class='del'>-	rcu_assign_pointer(*trigger_ptr, new);</div><div class='del'>-	if (old)</div><div class='del'>-		kref_put(&amp;old-&gt;refcount, psi_trigger_destroy);</div><div class='del'>-}</div><div class='del'>-</div><div class='ctx'> __poll_t psi_trigger_poll(void **trigger_ptr,</div><div class='ctx'> 				struct file *file, poll_table *wait)</div><div class='ctx'> {</div><div class='hunk'>@@ -1275,24 +1266,15 @@ __poll_t psi_trigger_poll(void **trigger_ptr,</div><div class='ctx'> 	if (static_branch_likely(&amp;psi_disabled))</div><div class='ctx'> 		return DEFAULT_POLLMASK | EPOLLERR | EPOLLPRI;</div><div class='ctx'> </div><div class='del'>-	rcu_read_lock();</div><div class='del'>-</div><div class='del'>-	t = rcu_dereference(*(void __rcu __force **)trigger_ptr);</div><div class='del'>-	if (!t) {</div><div class='del'>-		rcu_read_unlock();</div><div class='add'>+	t = smp_load_acquire(trigger_ptr);</div><div class='add'>+	if (!t)</div><div class='ctx'> 		return DEFAULT_POLLMASK | EPOLLERR | EPOLLPRI;</div><div class='del'>-	}</div><div class='del'>-	kref_get(&amp;t-&gt;refcount);</div><div class='del'>-</div><div class='del'>-	rcu_read_unlock();</div><div class='ctx'> </div><div class='ctx'> 	poll_wait(file, &amp;t-&gt;event_wait, wait);</div><div class='ctx'> </div><div class='ctx'> 	if (cmpxchg(&amp;t-&gt;event, 1, 0) == 1)</div><div class='ctx'> 		ret |= EPOLLPRI;</div><div class='ctx'> </div><div class='del'>-	kref_put(&amp;t-&gt;refcount, psi_trigger_destroy);</div><div class='del'>-</div><div class='ctx'> 	return ret;</div><div class='ctx'> }</div><div class='ctx'> </div><div class='hunk'>@@ -1316,14 +1298,24 @@ static ssize_t psi_write(struct file *file, const char __user *user_buf,</div><div class='ctx'> </div><div class='ctx'> 	buf[buf_size - 1] = '\0';</div><div class='ctx'> </div><div class='del'>-	new = psi_trigger_create(&amp;psi_system, buf, nbytes, res);</div><div class='del'>-	if (IS_ERR(new))</div><div class='del'>-		return PTR_ERR(new);</div><div class='del'>-</div><div class='ctx'> 	seq = file-&gt;private_data;</div><div class='add'>+</div><div class='ctx'> 	/* Take seq-&gt;lock to protect seq-&gt;private from concurrent writes */</div><div class='ctx'> 	mutex_lock(&amp;seq-&gt;lock);</div><div class='del'>-	psi_trigger_replace(&amp;seq-&gt;private, new);</div><div class='add'>+</div><div class='add'>+	/* Allow only one trigger per file descriptor */</div><div class='add'>+	if (seq-&gt;private) {</div><div class='add'>+		mutex_unlock(&amp;seq-&gt;lock);</div><div class='add'>+		return -EBUSY;</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	new = psi_trigger_create(&amp;psi_system, buf, nbytes, res);</div><div class='add'>+	if (IS_ERR(new)) {</div><div class='add'>+		mutex_unlock(&amp;seq-&gt;lock);</div><div class='add'>+		return PTR_ERR(new);</div><div class='add'>+	}</div><div class='add'>+</div><div class='add'>+	smp_store_release(&amp;seq-&gt;private, new);</div><div class='ctx'> 	mutex_unlock(&amp;seq-&gt;lock);</div><div class='ctx'> </div><div class='ctx'> 	return nbytes;</div><div class='hunk'>@@ -1358,7 +1350,7 @@ static int psi_fop_release(struct inode *inode, struct file *file)</div><div class='ctx'> {</div><div class='ctx'> 	struct seq_file *seq = file-&gt;private_data;</div><div class='ctx'> </div><div class='del'>-	psi_trigger_replace(&amp;seq-&gt;private, NULL);</div><div class='add'>+	psi_trigger_destroy(seq-&gt;private);</div><div class='ctx'> 	return single_release(inode, file);</div><div class='ctx'> }</div><div class='ctx'> </div></td></tr></table></div> <!-- class=content -->
<div class='footer'>generated by <a href='https://git.zx2c4.com/cgit/about/'>cgit </a> (<a href='https://git-scm.com/'>git 2.34.1</a>) at 2023-02-02 23:00:27 +0000</div>
</div> <!-- id=cgit -->
</body>
</html>
